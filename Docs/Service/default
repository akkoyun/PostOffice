# api.stf.digital için yapılandırma
server {
    listen 80;
    listen [::]:80;
    server_name api.stf.digital;

    location / {
        proxy_pass http://localhost:8000;
        proxy_http_version 1.1;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;
    }

}

# hardware.stf.digital için yapılandırma
server {
    listen 80;
    listen [::]:80;
    server_name hardware.stf.digital;

    location / {
        proxy_pass http://localhost:8005;
        proxy_http_version 1.1;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Host $http_host;
#        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;
    }

}

# app.stf.digital için yapılandırma
server {
    listen 80;
    listen [::]:80;
    server_name app.stf.digital;

    location / {
        proxy_pass http://localhost:8001;
        proxy_http_version 1.1;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;
    }

    # SSL/TLS ayarları (eğer HTTPS kullanacaksanız)
    # listen [::]:443 ssl ipv6only=on;
    # listen 443 ssl;
    # ssl_certificate /etc/letsencrypt/live/app.stf.digital/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/app.stf.digital/privkey.pem;
    # include /etc/letsencrypt/options-ssl-nginx.conf;
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

# HTTP'den HTTPS'ye yönlendirme için, her iki subdomain için de aşağıdaki tarzda bir blok kullanabilirsiniz.
# server {
#     if ($host = api.stf.digital) {
#         return 301 https://$host$request_uri;
#     } 
#     if ($host = app.stf.digital) {
#         return 301 https://$host$request_uri;
#     }
# 
#     listen 80;
#     listen [::]:80 default_server;
#     server_name api.stf.digital app.stf.digital;
#     return 404;
# }
